@page "/edit/{idString}"
@using WebAss.Models
@using WebAss.ApiCommunication
@inject NavigationManager NavigationManager
@inject TodosApi TodoApi


@if (!ValidID)
{
    <p>Invalid url</p>
}
else
{
    <h1>Edit @Todo.title</h1>
    <p>@message</p>
    <div class="add-todo-wrapper">
        <EditForm Model="@todoForm" OnValidSubmit="SubmitEditTodo">
            <DataAnnotationsValidator/>
            <div class="form-group">
                <label for="name">Name:</label>
                <InputText id="name" class="form-control" @bind-Value="todoForm.Name"/>
                <ValidationMessage For="@(() => todoForm.Name)"/>
            </div>

            <div class="form-group">
                <label for="notes">Notes:</label>
                <InputText id="notes" class="form-control" @bind-Value="todoForm.Notes"/>
                <ValidationMessage For="@(() => todoForm.Notes)"/>
            </div>
            
            <div class="form-group">
                <label for="deadline">Deadline:</label>
                <InputDate Type="InputDateType.DateTimeLocal" id="deadline" class="form-date-time" @bind-Value="todoForm.Deadline"/>
            </div>
            
            <div class="form-group">
                <label class="inline" for="notification">Send notification to my e-mail</label>
                <InputCheckbox id="notification" class="form-check-input inline" @bind-Value="todoForm.SendNotification" />
            </div>
            
            <div class="form-group">
                <label class="inline @(!todoForm.SendNotification ? "grey" : "")" for="range">Notify </label>
                <InputNumber id="range" class="form-number-input inline" disabled="@(!todoForm.SendNotification)" @bind-Value="todoForm.NotifyBefore"/>
                <span class="inline @(!todoForm.SendNotification ? "grey" : "")" > minutes before</span>
            </div>

            <div class="form-group">
                <label class="inline" for="notes">Finished:</label>
                <InputCheckbox id="finished" class="form-check-input inline" @bind-Value="todoForm.IsFinished"/>
                <ValidationMessage For="@(() => todoForm.Notes)"/>
            </div>

            <button type="submit" class="btn btn-primary">Save changes</button>
        </EditForm>
        <button class="btn btn-secondary" @onclick="DeleteTodo" >Delete</button>
    </div>           
}

@code {

    [Parameter]
    public string IdString { get; set; } = "";
    private int Id;
    private TodoItem Todo = new();
    private bool ValidID = false;
    private TodoForm todoForm = new();
    private string message = "";
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            Id = int.Parse(IdString);
        }
        catch (FormatException) {return;}

        var response = await TodoApi.GetTodo(Id);
        if (response is not null)
        {
            ValidID = true;
            Todo = response;
            todoForm.copyTodo(Todo);
        }
    }

    private async Task DeleteTodo()
    {
        if (await TodoApi.DeleteTodo(Id))
        {
            NavigationManager.NavigateTo("/");
        }
        else
            message = "Deletion failed, please try again later";
    }

    private async void SubmitEditTodo()
    {
        Todo.CopyFromForm(todoForm);
        if (await TodoApi.EditTodo(Todo))
        {
            message = "Todo has been edited";
        }
        else
            message = "Edit failed, please try again later";
    }
}
