@page "/addtodo"
@using Microsoft.AspNetCore.Components.Authorization
@using WebAss.ApiCommunication
@using WebAss.Models
@inject NavigationManager NavigationManager
@inject TodosApi TodosApi


<AuthorizeView Context="authContext">
    <Authorized>
        <p>@message</p>
        <div class="add-todo-wrapper">
            <EditForm Model="@todoForm" OnValidSubmit="AddNewTodo">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label for="name">Name:</label>
                    <InputText id="name" class="form-control" @bind-Value="todoForm.Name" />
                    <ValidationMessage For="@(() => todoForm.Name)" />
                </div>

                <div class="form-group">
                    <label for="notes">Notes:</label>
                    <InputText id="notes" class="form-control" @bind-Value="todoForm.Notes" />
                    <ValidationMessage For="@(() => todoForm.Notes)" />
                </div>

                <div class="form-group">
                    <label for="deadline">Deadline:</label>
                    <InputDate Type="InputDateType.DateTimeLocal" id="deadline" class="form-date-time"
                               @bind-Value="todoForm.Deadline" />
                </div>
                
                <div class="form-group">
                    <label class="inline" for="notification">Send notification to my e-mail</label>
                    <InputCheckbox id="notification" class="form-check-input inline" @bind-Value="todoForm.SendNotification" />
                </div>
                
                <div class="form-group">
                    <label class="inline @(!todoForm.SendNotification ? "grey" : "")" for="range">Notify </label>
                    <InputNumber id="range" class="form-number-input inline" disabled="@(!todoForm.SendNotification)" @bind-Value="todoForm.NotifyBefore"/>
                    <span class="inline @(!todoForm.SendNotification ? "grey" : "")" > minutes before</span>
                </div>

                <button type="submit" class="btn btn-primary" disabled=@IsDisabled>Submit</button>
            </EditForm>
        </div>
    </Authorized>
    <NotAuthorized>
        <p>To view your Tasks you need to log in</p>
        <button class="btn btn-primary" @onclick="GoToLoginPage">Login</button>
    </NotAuthorized>
</AuthorizeView>


@code {
    private string message = "";
    private TodoForm todoForm = new();

    private bool IsDisabled;

    private void GoToLoginPage()
    {
        NavigationManager.NavigateTo("/login");
    }

    protected async void AddNewTodo()
    {
        TodoItem newTodo = new();
        newTodo.CopyFromForm(todoForm);
        IsDisabled = true;
        if (!await TodosApi.AddTodo(newTodo))
        {
            message = "Adding new Todo failed, please try again";
            return;
        }
        message = "Todo was successfully added";
        IsDisabled = false;
        todoForm = new TodoForm();
        StateHasChanged();
    }
}
